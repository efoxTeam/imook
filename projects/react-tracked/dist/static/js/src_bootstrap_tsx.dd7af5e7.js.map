{"version":3,"sources":["webpack://react-tracked/./src/component/Counter/counterStore.ts","webpack://react-tracked/./src/component/Random.tsx","webpack://react-tracked/./src/component/Counter/Counter.tsx","webpack://react-tracked/./src/component/Counter/TextBox.tsx","webpack://react-tracked/./src/component/Counter/index.tsx","webpack://react-tracked/./src/component/Person/state.ts","webpack://react-tracked/./src/component/Person/Counter.tsx","webpack://react-tracked/./src/component/Person/Person.tsx","webpack://react-tracked/./src/component/Person/index.tsx","webpack://react-tracked/./src/component/PersonRedux/store.ts","webpack://react-tracked/./src/component/PersonRedux/Counter.tsx","webpack://react-tracked/./src/component/PersonRedux/Person.tsx","webpack://react-tracked/./src/component/PersonRedux/index.tsx","webpack://react-tracked/./src/component/Todo/store.ts","webpack://react-tracked/./src/component/Todo/TodoItem.tsx","webpack://react-tracked/./src/component/Todo/TodoList.tsx","webpack://react-tracked/./src/component/Todo/index.tsx","webpack://react-tracked/./src/component/App.tsx","webpack://react-tracked/./src/bootstrap.tsx"],"names":["createContainer","useState","count","text","CounterProvider","Provider","useCounter","useTracked","Random","style","marginLeft","color","Math","random","state","setTracked","increment","useCallback","console","log","prev","type","onClick","initialState","person","age","firstName","lastName","numRendered","setState","s","Input","name","value","onChange","event","target","StrictMode","reducer","action","useReducer","useTrackedState","useDispatch","useUpdate","dispatch","v","parseInt","todos","id","title","completed","nextId","filter","todo","map","memo","checked","textDecoration","key","Todo","PersonRedux","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/src_bootstrap_tsx.dd7af5e7.js","sourcesContent":["import {useState} from 'react'\nimport {createContainer} from 'react-tracked'\nconst useValue = () =>\n  useState({\n    count: 0,\n    text: 'hello',\n  })\n\nexport const {Provider: CounterProvider, useTracked: useCounter} = createContainer(useValue)\n","import React from 'react'\n\nexport const Random = () => <span style={{marginLeft: '10px', color: '#CCC'}}>{Math.random()}</span>\n","import React, {useCallback} from 'react'\nimport {useCounter} from 'src/component/Counter/counterStore'\nimport {Random} from '../Random'\nconst Counter = () => {\n  const [state, setTracked] = useCounter()\n\n  const increment = useCallback(() => {\n    console.log('Counter increment')\n    setTracked((prev: any) => {\n      return {\n        ...prev,\n        count: prev.count + 1,\n      }\n    })\n  }, [setTracked])\n  return (\n    <div>\n      <span>Count: {state.count}</span>\n      <button type=\"button\" onClick={increment}>\n        +1\n      </button>\n      <Random />\n    </div>\n  )\n}\n\nexport default Counter\n","import React from 'react'\nimport {useCounter} from 'src/component/Counter/counterStore'\nimport {Random} from '../Random'\n\nconst TextBox = () => {\n  const [state] = useCounter()\n  return (\n    <>\n      {state.text}\n      <Random />\n    </>\n  )\n}\n\nexport default TextBox\n","import React from 'react'\nimport {CounterProvider} from 'src/component/Counter/counterStore'\nimport Counter from 'src/component/Counter/Counter'\nimport TextBox from 'src/component/Counter/TextBox'\nconst App = () => (\n  <CounterProvider>\n    <Counter />\n    <TextBox />\n  </CounterProvider>\n)\nexport default App\n","import {useState} from 'react'\n\nimport {createContainer} from 'react-tracked'\n\nconst initialState = {\n  count: 0,\n  person: {\n    age: 0,\n    firstName: '',\n    lastName: '',\n  },\n}\n\nconst useValue = () => useState(initialState)\n\nexport const {Provider, useTracked} = createContainer(useValue)\n","import React from 'react'\nimport {Random} from '../Random'\n\nimport {useTracked} from './state'\n\nlet numRendered = 0\n\nconst Counter: React.FC = () => {\n  const [state, setState] = useTracked()\n  const increment = () => {\n    setState(s => ({\n      ...s,\n      count: s.count + 1,\n    }))\n  }\n  return (\n    <div>\n      numRendered: {++numRendered}\n      <Random />\n      <div>\n        <span>Count: {state.count}</span>\n        <button type=\"button\" onClick={increment}>\n          +1\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Counter\n","import React from 'react'\nimport {Random} from '../Random'\n\nimport {useTracked} from './state'\n\nlet numRendered = 0\nconst Input = ({name, setState, state}: any) => {\n  return (\n    <div>\n      First Name:\n      <input\n        value={state.person[name]}\n        onChange={event => {\n          const person: any = {}\n          person[name] = event.target.value\n          setState((s: any) => ({\n            ...s,\n            person: {\n              ...s.person,\n              ...person,\n            },\n          }))\n        }}\n      />\n      <Random />\n    </div>\n  )\n}\n\nconst Person: React.FC = () => {\n  const [state, setState] = useTracked()\n  return (\n    <div>\n      numRendered: {++numRendered}\n      <Random />\n      <Input name={'firstName'} state={state} setState={setState} />\n      <Input name={'lastName'} state={state} setState={setState} />\n      <Input name={'age'} state={state} setState={setState} />\n    </div>\n  )\n}\n\nexport default Person\n","import React, {StrictMode} from 'react'\n\nimport {Provider} from './state'\n\nimport Counter from './Counter'\nimport Person from './Person'\n\nconst App: React.FC = () => (\n  <StrictMode>\n    <Provider>\n      <h2>===== SetState =====</h2>\n      <h3>Counter</h3>\n      <Counter />\n      <h3>Person</h3>\n      <Person />\n    </Provider>\n  </StrictMode>\n)\n\nexport default App\n","import {useReducer, Reducer} from 'react'\n\nimport {createContainer} from 'react-tracked'\n\nconst initialState = {\n  count: 0,\n  person: {\n    age: 0,\n    firstName: '',\n    lastName: '',\n  },\n}\ntype State = {\n  count: number\n  person: {\n    age: number\n    firstName: string\n    lastName: string\n  }\n}\ntype Action =\n  | {type: 'INC'; count: number}\n  | {type: 'SET_FIRSTNAME'; firstName: string}\n  | {type: 'SET_LASTNAME'; lastName: string}\n  | {type: 'SET_AGE'; age: number}\nconst reducer: Reducer<State, Action> = (state, action) => {\n  switch (action.type) {\n    case 'INC':\n      return {\n        ...state,\n        count: state.count + action.count,\n      }\n    case 'SET_FIRSTNAME':\n      return {\n        ...state,\n        person: {...state.person, ...{firstName: action.firstName}},\n      }\n    case 'SET_LASTNAME':\n      return {\n        ...state,\n        person: {...state.person, ...{lastName: action.lastName}},\n      }\n    case 'SET_AGE':\n      return {\n        ...state,\n        person: {...state.person, ...{age: action.age}},\n      }\n    default:\n      return state\n  }\n}\n\nconst useValue = () => useReducer(reducer, initialState)\n\nexport const {Provider, useTrackedState, useUpdate: useDispatch} = createContainer(useValue)\n","import React from 'react'\nimport {Random} from '../Random'\n\nimport {useDispatch, useTrackedState} from './store'\n\nlet numRendered = 0\n\nconst Counter: React.FC = () => {\n  const state = useTrackedState()\n  const dispatch = useDispatch()\n  const increment = () => {\n    dispatch({type: 'INC', count: 1})\n  }\n  return (\n    <div>\n      numRendered: {++numRendered}\n      <Random />\n      <div>\n        <span>Count: {state.count}</span>\n        <button type=\"button\" onClick={increment}>\n          +1\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Counter\n","import React from 'react'\nimport {Random} from '../Random'\n\nimport {useDispatch, useTrackedState} from './store'\n\nlet numRendered = 0\nconst Input = ({name, state}: any) => {\n  const dispatch = useDispatch()\n  return (\n    <div>\n      First Name:\n      <input\n        value={state.person[name]}\n        onChange={event => {\n          const v = event.target.value\n          switch (name) {\n            case 'firstName':\n              dispatch({type: 'SET_FIRSTNAME', firstName: v})\n              break\n            case 'lastName':\n              dispatch({type: 'SET_LASTNAME', lastName: v})\n              break\n            case 'age':\n              dispatch({type: 'SET_AGE', age: parseInt(v)})\n              break\n          }\n        }}\n      />\n      <Random />\n    </div>\n  )\n}\n\nconst Person: React.FC = () => {\n  const state = useTrackedState()\n  return (\n    <div>\n      numRendered: {++numRendered}\n      <Random />\n      <Input name={'firstName'} state={state} />\n      <Input name={'lastName'} state={state} />\n      <Input name={'age'} state={state} />\n    </div>\n  )\n}\n\nexport default Person\n","import React, {StrictMode} from 'react'\n\nimport {Provider} from './store'\n\nimport Counter from './Counter'\nimport Person from './Person'\n\nconst App: React.FC = () => (\n  <StrictMode>\n    <Provider>\n      <h2>===== Redux =====</h2>\n      <h3>Counter</h3>\n      <Counter />\n      <h3>Person</h3>\n      <Person />\n    </Provider>\n  </StrictMode>\n)\n\nexport default App\n","import {useReducer, Reducer} from 'react'\nimport {createContainer} from 'react-tracked'\n\nexport type TodoType = {\n  id: number\n  title: string\n  completed: boolean\n}\n\ntype State = {\n  todos: TodoType[]\n}\n\ntype Action =\n  | {type: 'ADD_TODO'; title: string}\n  | {type: 'DELETE_TODO'; id: number}\n  | {type: 'CHANGE_TODO'; id: number; title: string}\n  | {type: 'TOGGLE_TODO'; id: number}\n\nconst initialState: State = {\n  todos: [\n    {id: 1, title: 'Wash dishes', completed: false},\n    {id: 2, title: 'Study JS', completed: false},\n    {id: 3, title: 'Buy ticket', completed: false},\n  ],\n}\n\nlet nextId = 4\n\nconst reducer: Reducer<State, Action> = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return {\n        ...state,\n        todos: [...state.todos, {id: nextId++, title: action.title, completed: false}],\n      }\n    case 'DELETE_TODO':\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id),\n      }\n    case 'CHANGE_TODO':\n      return {\n        ...state,\n        todos: state.todos.map(todo => (todo.id === action.id ? {...todo, title: action.title} : todo)),\n      }\n    case 'TOGGLE_TODO':\n      return {\n        ...state,\n        todos: state.todos.map(todo => (todo.id === action.id ? {...todo, completed: !todo.completed} : todo)),\n      }\n    default:\n      return state\n  }\n}\n\nconst useValue = () => useReducer(reducer, initialState)\n\nexport const {Provider, useTrackedState, useUpdate: useDispatch} = createContainer(useValue)\n","import React from 'react'\nimport {memo} from 'react-tracked'\nimport {Random} from '../Random'\n\nimport {useDispatch, TodoType} from './store'\n\ntype Props = {\n  todo: TodoType\n}\n\nlet numRendered = 0\n\n// Use custom memo instead of React.memo\nconst TodoItem: React.FC<Props> = memo(({todo}) => {\n  const dispatch = useDispatch()\n  return (\n    <li>\n      numRendered: {++numRendered}\n      <input type=\"checkbox\" checked={todo.completed} onChange={() => dispatch({type: 'TOGGLE_TODO', id: todo.id})} />\n      <span\n        style={{\n          textDecoration: todo.completed ? 'line-through' : 'none',\n        }}>\n        {todo.title}\n      </span>\n      <Random />\n    </li>\n  )\n})\n\nexport default TodoItem\n","import React from 'react'\n\nimport {useTrackedState} from './store'\nimport TodoItem from './TodoItem'\n\nconst TodoList: React.FC = () => {\n  const state = useTrackedState()\n  const {todos} = state\n  return (\n    <ul>\n      {todos.map(todo => (\n        <TodoItem key={todo.id} todo={todo} />\n      ))}\n    </ul>\n  )\n}\n\nexport default TodoList\n","import React from 'react'\n\nimport {Provider} from './store'\nimport TodoList from './TodoList'\n\nconst App: React.FC = () => (\n  <Provider>\n    <TodoList />\n  </Provider>\n)\n\nexport default App\n","import React from 'react'\nimport Counter from 'src/component/Counter'\nimport Person from 'src/component/Person'\nimport PersonRedux from 'src/component/PersonRedux'\nimport Todo from './Todo'\nconst App = () => (\n  <>\n    <h1>Todo List</h1>\n    <Todo />\n    <h1>Count</h1>\n    <Counter />\n    <h1>Person</h1>\n    <Person />\n    <h1>Person Redux</h1>\n    <PersonRedux />\n  </>\n)\nexport default App\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport App from 'src/component/App'\nReactDOM.render(<App />, document.getElementById('emp-root'))\n"],"sourceRoot":""}